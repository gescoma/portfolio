---
export interface Props {
  href: string
  type?:
    | "primary"
    | "secondary"
    | "success"
    | "danger"
    | "warning"
    | "info"
    | "light"
    | "dark"
  size?: "normal" | "large" | "small" | "block"
  icon?: boolean
  target?: string
  rel?: string
}

const {
  href,
  type = "dark",
  size = "normal",
  icon = false,

  ...props
} = Astro.props
---

<a
  href={href}
  class={`${type} btn ${size} ${icon ? "btn-icon" : ""}`}
  {...props}><slot /></a
>

<style>
  .normal {
    --size: 0.625rem;
    --font-size: 0.875rem;
    --font-weight: 500;
    --width: auto;
  }

  .small {
    --size: 0.5rem;
    --font-size: 0.75rem;
    --font-weight: 400;
    --width: auto;
  }

  .large {
    --size: 0.75rem;
    --font-size: 1rem;
    --font-weight: 500;
    --width: 100%;
  }

  .dark {
    --btn-color: #fff;
    --btn-background-color: #000;
  }

  .dark:hover {
    --btn-color: #fff;
    --btn-background-color: #23272b;
  }

  .light {
    --btn-color: #000;
    --btn-background-color: #fff;
  }

  .light:hover {
    --btn-color: #000;
    --btn-background-color: #ededed;
  }

  @media (min-width: 768px) {
    .large {
      --width: auto;
    }
  }

  .btn {
    display: flex;
    align-items: center;
    justify-content: center;
    text-decoration: none;
    padding: var(--size) calc(3 * var(--size));
    border-radius: calc(3 * var(--size));
    font-size: var(--font-size);
    font-weight: var(--font-weight);
    color: var(--btn-color, #212529);
    background-color: var(--btn-background-color, #fff);
    transition: background-color 0.1s ease-in-out, var(--transition-color);
    width: var(--width);
    text-align: center;
    max-height: 2.625rem;
  }

  .btn-icon {
    padding: calc(var(--size) - 0.2rem);
    max-width: 2.625rem;
  }
</style>
