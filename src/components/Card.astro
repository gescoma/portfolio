---
import Close from "./icons/Close.astro"
export interface Props {
  title?: string
  body?: string
  size?: "small" | "medium" | "large"
  backgroundType?: "color" | "gradient" | "image"
  backgroundImage?: string
  backgroundColors?: {
    primary: string
    secondary?: string
  }
  clickable?: boolean
}

interface CSSStyles {
  [key: string]: string
}

const {
  title,
  body,
  size = "medium",
  backgroundType = "color",
  backgroundColors = {
    primary: "var(--secondary-hex)",
    secondary: "var(--accent-hex)",
  },
  backgroundImage = "https://placehold.co/600x500",
  clickable = false,
} = Astro.props

const styles: CSSStyles = {
  "--primaryColor": backgroundColors.primary,
  "--secondaryColor": backgroundColors.secondary || backgroundColors.primary,
}

const getCardStyles = () => {
  const styles: CSSStyles = {}
  if (backgroundType === "image") {
    styles["--backgroundImage"] = `url("${backgroundImage}")`
  }
  if (backgroundType === "color") {
    styles["--primaryColor"] = backgroundColors.primary
  }
  return styles
}
---

<article
  class={`card ${size} ${backgroundType === "image" && "card-image"} ${
    backgroundType === "color" && "card-color"
  } ${clickable && "card-clickable"}`}
  style={getCardStyles()}
>
  {
    backgroundType === "gradient" && (
      <div class="card__gradient-background">
        <span
          class="card-circle card-circle-2"
          style={{
            background: backgroundColors.secondary,
            boxShadow: `0px 0px 200px 200px ${backgroundColors.secondary}`,
          }}
        />
        <span
          class="card-circle card-circle-1"
          style={{
            background: backgroundColors.primary,
            boxShadow: `0px 0px 200px 200px ${backgroundColors.primary}`,
          }}
        />
      </div>
    )
  }
  {title && <h2>{title}</h2>}
  {body && <h3>{body}</h3>}
  <div class="card__body">
    <slot />
  </div>
  {
    clickable && (
      <div class="card__extended">
        <button class="card__extended__close">
          <Close width="2rem" height="2rem" />
        </button>
        onclick body
      </div>
    )
  }
</article>
<style>
  .card {
    display: flex;
    flex-direction: column;
    padding: 2rem;
    background-color: rgba(218, 227, 229, 15%);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    height: 100%;
    border-radius: 0.6rem;
    transition: width 0.2s cubic-bezier(0.22, 1, 0.36, 1),
      height 0.2s cubic-bezier(0.22, 1, 0.36, 1),
      background-color 0.2s cubic-bezier(0.22, 1, 0.36, 1);
    overflow: hidden;
    position: relative;
  }
  .card__gradient-background {
    z-index: -1;
  }

  .card-circle {
    position: absolute;
    border-radius: 100%;
    opacity: 0.5;
  }
  .card-circle-1 {
    top: -327px;
    right: 0;
    width: 380px;
    height: 380px;
  }
  .card-circle-2 {
    bottom: -147px;
    right: -18px;
    width: 427px;
    height: 343px;
  }
  h2 {
    margin: 0;
    font-size: 1.25rem;
    transition: color 0.2s cubic-bezier(0.22, 1, 0.36, 1);
  }
  h3 {
    margin-top: 1.5rem;
  }

  @media (min-width: 992px) {
    h3 {
      margin-top: 3rem;
    }
  }

  .large h2 {
    font-size: 2.5rem;
    font-weight: 600;
  }

  .large h3 {
    font-size: 1rem;
    font-style: normal;
    font-weight: 400;
  }

  .card__body {
    margin-top: auto;
  }

  .card__extended {
    display: none;
  }
  .card--active > .card__extended {
    display: block;
  }

  .card-image {
    background-image: var(--backgroundImage);
    background-size: cover;
    background-position: center;
  }

  .card-color {
    background-color: var(--primaryColor);
  }
  .card-clickable {
    cursor: pointer;
    transition: transform 0.4s cubic-bezier(0.22, 1, 0.36, 1);
  }

  .card.card--active > .card__body,
  .card.card--active > h2,
  .card.card--active > h3 {
    display: none;
  }

  .card.card--active.card-clickable {
    cursor: default;
  }

  .card:not(.card--active).card-clickable:hover,
  .card:not(.card--active).card-clickable:focus,
  .card:not(.card--active).card-clickable:active {
    transform: scale(1.02);
  }

  .card__extended {
    position: relative;
  }

  .card__extended__close {
    position: absolute;
    top: 1rem;
    right: 1rem;
    border: none;
    background: none;
    cursor: pointer;
    transition: color 0.2s cubic-bezier(0.22, 1, 0.36, 1);
  }

  .card__extended__close:hover,
  .card__extended__close:focus,
  .card__extended__close:active {
    color: var(--accent-hex);
  }
</style>
