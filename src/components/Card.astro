---
import type { DefaultTFuncReturn } from "i18next"
import { getContrastColor } from "../scripts/color"

import Close from "./icons/Close.astro"
import Image from "./Image.astro"
import Dialog from "./Dialog.astro"
export interface Props {
  title?: string | DefaultTFuncReturn
  body?: string | DefaultTFuncReturn
  size?: "small" | "medium" | "large"
  backgroundType?:
    | "color"
    | "organic-gradient"
    | "image"
    | "image-color"
    | "gradient"
  backgroundImage?: string
  backgroundColors?: {
    primary: string
    secondary?: string
  }
  imageAlt?: string
  clickable?: boolean
}

interface CSSStyles {
  [key: string]: string
}

const {
  title,
  body,
  size = "medium",
  backgroundType = "color",
  backgroundColors = {
    primary: "var(--secondary-hex)",
    secondary: "var(--accent-hex)",
  },
  backgroundImage = "https://placehold.co/600x500",
  clickable = false,
  imageAlt = "Introduce image alt text",
} = Astro.props

const styles: CSSStyles = {
  "--primary-color": backgroundColors.primary,
  "--secondary-color": backgroundColors.secondary || backgroundColors.primary,
}

const getCardStyles = () => {
  if (backgroundType === "color" || backgroundType === "image-color") {
    styles["--font-color"] = getContrastColor(backgroundColors.primary)
    styles["--primary-color"] = backgroundColors.primary
  }
  return styles
}
---

<article
  class={`card ${size} ${
    (backgroundType === "color" || backgroundType === "image-color") &&
    "card-color"
  } ${backgroundType === "image" && "card-image"} ${
    clickable && "card-clickable"
  }`}
  style={getCardStyles()}
>
  {
    backgroundType === "organic-gradient" && (
      <div class="card__organic-gradient-background">
        <span
          class="card__circle card__circle-2"
          style={{
            background: backgroundColors.secondary,
            boxShadow: `0px 0px 200px 200px ${backgroundColors.secondary}`,
          }}
        />
        <span
          class="card__circle card__circle-1"
          style={{
            background: backgroundColors.primary,
            boxShadow: `0px 0px 200px 200px ${backgroundColors.primary}`,
          }}
        />
      </div>
    )
  }
  {
    backgroundType === "image" && (
      <Image src={backgroundImage} alt={imageAlt} lazy blur size="full" />
      // <div class="card__image-background aut">
      //   <img src={backgroundImage} alt={imageAlt} />
      // </div>
    )
  }
  {title && <h2 set:html={title} />}
  {body && <h3 set:html={body} />}
  <div class="card__body">
    <slot />
  </div>
  {
    clickable && (
      <Dialog>
        <slot name="dialog-content" />
      </Dialog>
    )
  }
</article>

<style>
  h2 {
    text-wrap: balance;
  }
  .card {
    display: flex;
    flex-direction: column;
    padding: 2rem;
    background-color: rgba(218, 227, 229, 15%);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    height: 100%;
    border-radius: 1rem;
    overflow: hidden;
    position: relative;
    color: var(--font-color);
  }

  .card.card__active {
    padding: 2rem;
  }
  .card__organic-gradient-background {
    z-index: -1;
  }

  .card__image-background {
    width: 100%;
    height: 100%;
  }

  .card__image-background img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .card.medium {
    padding: 1.5rem;
    min-height: 300px;
  }
  .card.medium h2 {
    font-size: 1.4rem;
    font-weight: 400;
  }

  .card.medium h3 {
    font-size: 0.9rem;
    font-style: normal;
    font-weight: 400;
    margin: 0.5rem 0;
  }

  .card__circle {
    position: absolute;
    border-radius: 100%;
    opacity: 0.5;
  }
  .card__circle-1 {
    top: -327px;
    right: 0;
    width: 380px;
    height: 380px;
  }
  .card__circle-2 {
    bottom: -147px;
    right: -18px;
    width: 427px;
    height: 343px;
  }
  .card.large h2 {
    margin: 0;
    font-size: 1.25rem;
    font-size: 2rem;
    font-weight: 600;
  }
  .card.large h3 {
    margin: 1.5rem 0 3rem 0;
    font-size: 1rem;
    font-style: normal;
    font-weight: 400;
  }

  @media (min-width: 768px) {
    .card.large h2 {
      font-size: 2.25rem;
    }
  }

  @media (min-width: 992px) {
    .card.large h2 {
      font-size: 2.5rem;
    }
    .card.large h3 {
      margin: 3rem 0 5rem 0;
    }
  }

  .card__body {
    margin-top: auto;
  }

  .card__active > .card__image-background {
    display: none;
    visibility: hidden;
  }

  .card__active.card-image {
    max-height: none;
  }



  .card-color {
    background-color: var(--primary-color);
  }
  .card-clickable {
    cursor: pointer;
    transition: transform 0.4s cubic-bezier(0.22, 1, 0.36, 1);
  }

  .card.card__active > .card__body,
  .card.card__active > h2,
  .card.card__active > h3 {
    display: none;
  }

  .card.card__active.card-clickable {
    cursor: default;
    overflow-y: auto;
  }

  .card:not(.card__active).card-clickable:hover,
  .card:not(.card__active).card-clickable:focus,
  .card:not(.card__active).card-clickable:active {
    transform: scale(1.01);
    transform-origin: center;
  }

  .card-image {
    min-height: 400px;
    max-height: 400px;
    padding: 0;
  }
  @media (min-width: 768px) {
    .card.card__active {
      padding: 3rem;
    }

    .card-image {
      max-height: 500px;
    }
  }

  .dialog-content :global(h3) {
    margin: 2rem 0;
  }

  .card__active :global(.card__extended) {
    display: block;
  }
</style>